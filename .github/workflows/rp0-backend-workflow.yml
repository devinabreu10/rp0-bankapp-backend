name: RP0 Banking Backend CI/CD

on:
  push:
    branches: [ main ]

jobs:
  compile-and-analyze-rp0-backend:
    name: Compile/Analyze RP0 Backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Compile/Test with Maven and Analyze with SonarQube
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./mvnw -B test sonar:sonar -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}

  build-and-push-docker-image:
    name: Build/Push Docker Image
    runs-on: ubuntu-latest
    needs: compile-and-analyze-rp0-backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Extract project version
        id: extract-version
        run: echo "VERSION=$(./mvnw -q -Dexec.executable='echo' -Dexec.args='${project.version}' --non-recursive exec:exec)" >> $GITHUB_OUTPUT

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Push to DockerHub
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          push: true
          platforms: linux/amd64
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/rp0-bankapp-api:latest
            ${{ secrets.DOCKER_USERNAME }}/rp0-bankapp-api:${{ steps.extract-version.outputs.VERSION }}
          build-args: |
            PROFILE=dev
            APP_VERSION=${{ steps.extract-version.outputs.VERSION }}

  snyk-vulnerability-scan:
    name: Snyk Vulnerability Scan
    runs-on: ubuntu-latest
    needs: compile-and-analyze-rp0-backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/maven-3-jdk-17@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: monitor

  deploy-to-render:
    name: Deploy to Render Cloud
    runs-on: ubuntu-latest
    needs: build-and-push-docker-image
    steps:
#      - name: Trigger Render Deploy
#        run: curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK }}
      - name: Deploy to production
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: ${{ secrets.MY_RENDER_SERVICE_ID }}
          api-key: ${{ secrets.MY_RENDER_API_KEY }}
          wait-for-success: true
